clust = kmeans(trajs,centers = 7,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 9,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
clust = kmeans(trajs,centers = 4,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
clust = kmeans(trajs,centers = 9,nstart = 100,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
g+geom_point()
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)
nbootstrap = 10000
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-0.1,0.1),runif(1,-0.1,0.1),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
resdir = paste0(Sys.getenv('CN_HOME'),'/Results/SpatioTempCausality/Synthetic/arma')
resdir = paste0(Sys.getenv('CN_HOME'),'/Results/SpatioTempCausality/Synthetic/arma/')
nbootstrap = 10000
maxai = 0.1
lag = 2
nclust = 9
clust = kmeans(trajs,centers = nclust,nstart = 1000,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point()+stdtheme
g+geom_point(pch='.')+stdtheme
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(maxai),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=17,height=15,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=18,height=15,units='cm')
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(maxai),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=16,height=15,units='cm')
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
nbootstrap = 10000
maxai = 0.1
lag = 2
# set seed for reproducibility
set.seed(0)
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
# cluster ts
#clust = kmeans(trajs,centers = 8,nstart = 100,iter.max = 100)
#rows = which(Im(eigs[,1])==0&Im(eigs[,2])==0&Im(eigs[,3])==0)
#g=ggplot(data.frame(lambda1=as.numeric(eigs[rows,1]),lambda2=as.numeric(eigs[rows,3]),cluster=clust$cluster[rows]),aes(x=lambda1,y=lambda2,color=cluster))
#g+geom_point()
#g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=clust$cluster),aes(x=a1,y=a2,color=as.character(cluster)))
#g+geom_point()
#ccoef=c()
#for(k in 3:15){clust = kmeans(trajs,centers = k,nstart = 100,iter.max = 100);ccoef=append(ccoef,clust$betweenss/clust$totss)}
#plot(3:15,ccoef,type='l')
# -> k=9 propre
nclust = 9
clust = kmeans(trajs,centers = nclust,nstart = 1000,iter.max = 100)
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
timetrajs=data.frame()
for(cluster in 1:nrow(clust$centers)){
timetrajs=rbind(timetrajs,cbind(rho=clust$centers[cluster,],cluster=rep(cluster,ncol(clust$centers)),tau=-10:10))
}
g=ggplot(timetrajs,aes(x=tau,y=rho,color=as.character(cluster),group=cluster))
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g+geom_point()+geom_line()+facet_wrap(~cluster)+scale_color_discrete(name="cluster")+xlab(expression(tau))+ylab(expression(rho[tau]))+stdtheme
ggsave(paste0(resdir,'centertrajs_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
g+geom_point(size=0.5)+xlab(expression(a[1]))+ylab(expression(a[2]))+stdtheme
g=ggplot(data.frame(a1=eigs[,1],a2=eigs[,2],cluster=as.character(clust$cluster)),aes(x=a1,y=a2,color=cluster))
g+geom_point(size=0.5)+xlab(expression(a[1]))+ylab(expression(a[2]))+stdtheme
ggsave(paste0(resdir,'coefsclust_nbootstrap',nbootstrap,'_maxai',gsub(pattern = '.',replacement = '_',x=maxai,fixed = T),'_lag',lag,'nclust',nclust,'.png'),width=22,height=20,units='cm')
1/sqrt(1+1/0.1^2)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),0,0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
x
plot(1:nrow(x),x[,1],type='l')
ar=array(data = c(diag(2),c(0,0.5,0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=100000)
plot(1:100000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
plot(1:100000,x[,1],type='l');points(1:100000,x[,2],col='red',type='l')
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
ar=array(data = c(diag(2),c(0,0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
epsilon=matrix(rnorm(2000),ncol=2)
espilon
epsilon
cor(epsilon)
x=matrix(rep(0,2000),ncol=2)
for(t in 2:nrow(x)){x[t,]=0.1*epsilon[t-1,c(2,1)]+epsilon[t,]}
x
plot(1:2000,x[,1],type='l')
dim(x)
plot(1:1000,x[,1],type='l')
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2)
for(t in 2:nrow(x)){x[t,]=0.1*epsilon[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=0.1*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
epsilon=matrix(rnorm(20000),ncol=2)
x=matrix(rep(0,20000),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=100000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=100000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
help(marima.sim)
marima.sim
pol.mul
help(pol.mul)
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=1000)
plot(1:1000,x[,1],type='l');points(1:1000,x[,2],col='red',type='l')
cor.test(x[2:nrow(x),1],x[1:(nrow(x)-1),2])
var(x[,1])
tf=10000
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
plot(1:tf,x[,1],type='l');points(1:tf,x[,2],col='red',type='l')
var(x[,1])
tf=100000
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
cor.test(x[2:nrow(x),1],x[1:(nrow(x)-1),2])
var(x[,1])
tf=100000
ar=array(data = c(diag(2),c(0,0,0,0)),dim = c(2,2,2))
x=marima.sim(kvar=2,ar.model = ar,nsim=tf)
var(x[,1])
marima.sin
marima.sim
kvar=2
ar.dif <- array(c(diag(kvar)), dim = c(kvar, kvar, 1))
ar.dif
ar
ar.model.d <- pol.mul(ar.model, ar.dif, L = (Lar + Ldif -
2 + 1))
ar.model.d <- pol.mul(ar, ar.dif)
ar.model.d <- pol.mul(ar.model, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d <- pol.mul(ar, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d
marima.sim
LL <- pol.order(ar.model.d) + 1
LL
ar.model.d
ar
ar=array(data = c(diag(2),c(0,-0.5,-0.5,0)),dim = c(2,2,2))
ar
ar.model.d <- pol.mul(ar, ar.dif, L = (1 + 2 -
2 + 1))
ar.model.d
marima.sim
tf=100000
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t,]-0.5*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=x[t,]-x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=-x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
tf=10000
epsilon=matrix(rnorm(2*tf),ncol=2)
x=matrix(rep(0,2*tf),ncol=2);x[1,]=epsilon[1,]
for(t in 2:nrow(x)){x[t,]=-0.8*x[t-1,c(2,1)]+epsilon[t,]}
plot(1:nrow(x),x[,1],type='l')
var(epsilon)
1/1-0.8
1/(1-0.8)
var(x)
1/(1-0.8^2)
install.packages("scholar")
library(scholar)
scholar::get_citation_history("3559635412259202692")
help("get_citation_history")
get_article_cite_history("","3559635412259202692")
get_article_cite_history("zoioGw4AAAAJ","3559635412259202692")
help(get_article_cite_history)
get_profile("zoioGw4AAAAJ")
get_profile
getOption
runif(n = 100000)
matrix(runif(n = 100000),ncol=10)
prcomp(matrix(runif(n = 100000),ncol=10))
summary(prcomp(matrix(runif(n = 100000),ncol=10)))
summary(prcomp(matrix(runif(n = 100000),ncol=10)))
summary(prcomp(matrix(runif(n = 100000),ncol=10)))
summary(prcomp(matrix(runif(n = 1000000),ncol=10)))
summary(prcomp(matrix(runif(n = 10000000),ncol=10)))
1/406
summary(prcomp(matrix(runif(n = 10000000),ncol=20)))
library(ggplot2)
library(marima)
source(paste0(Sys.getenv('CN_HOME'),'/Models/Utils/R/plots.R'))
resdir = paste0(Sys.getenv('CN_HOME'),'/Results/SpatioTempCausality/Synthetic/arma/')
#'
#' rho[X(t-tau),Y(t)]
getLaggedCorrs <- function(x,y,taumax=10){
res=data.frame()
for(tau in -taumax:taumax){
if(tau>=0){xx=x;yy=y}else{xx=y;yy=x}
corrs = cor.test(xx[1:(length(xx)-abs(tau))],yy[(abs(tau)+1):(length(yy))])
estimate = corrs$estimate
rhomin = corrs$conf.int[1]
rhomax = corrs$conf.int[2]
res=rbind(res,data.frame(rho=estimate,rhomin = rhomin,rhomax=rhomax,tau=tau,pval=corrs$p.value,tstat=corrs$statistic))
}
return(res)
}
plotLaggedCorrs <- function(X,taumax=10){
df = data.frame()
for(j1 in 1:(ncol(X)-1)){
for(j2 in (j1+1):ncol(X)){
df=rbind(df,data.frame(getLaggedCorrs(X[,j1],X[,j2],taumax = taumax),vars=paste0(j1,"->",j2)))
}
}
g=ggplot(df,aes(x=tau,y=rho,colour=vars,group=vars,ymin=rhomin,ymax=rhomax))
g+geom_line()+geom_errorbar()+geom_point()+stdtheme
}
laggedCorrs <- function(X,taumax=10,format="rowdf"){
df = data.frame()
if(format=="coldf"){df=c()}
for(j1 in 1:(ncol(X)-1)){
for(j2 in (j1+1):ncol(X)){
corrs = getLaggedCorrs(X[,j1],X[,j2],taumax = taumax)
if(format=="rowdf"){
df=rbind(df,data.frame(corrs,vars=paste0(j1,"->",j2)))
}
if(format=="coldf"){
df = append(df,corrs$rho)
}
}
}
if(format=="rowdf"){
return(df)
}
if(format=="coldf"){
return(data.frame(matrix(df,ncol=length(df))))
}
}
nbootstrap = 10000
maxai = 0.1
lag = 2
# set seed for reproducibility
set.seed(0)
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
plotLaggedCorrs(x)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
set.seed(0)
trajs=data.frame();eigs=data.frame()
for(b in 1:nbootstrap){
if(b%%100==0){show(b)}
#ar=array(data = c(diag(3),runif(9,-0.5,0.5)),dim = c(3,3,2))
#x=marima.sim(kvar=3,ar.model = ar,nsim=10000)
ar=array(data = c(diag(2),rep(0,4),c(0,runif(1,-maxai,maxai),runif(1,-maxai,maxai),0)),dim = c(2,2,3))
x=marima.sim(kvar=2,ar.model = ar,nsim=10000)
#plotLaggedCorrs(x)
trajs=rbind(trajs,laggedCorrs(x,format = "coldf"))
#eigs=rbind(eigs,eigen(ar[,,2])$values)
eigs=rbind(eigs,c(ar[1,2,3],ar[2,1,3]))
}
help(chol)
coords = matrix(runif(2*n),ncol = 2)
n = 20
coords = matrix(runif(2*n),ncol = 2)
coords
plot(coords)
help(spDist )
??spDist
library(sp)
dist(coords)
d = dist(coords)
chol(d)
d
d[1,1]
d = as.matrix(dist(coords))
d[1,1]
d[1,2]
d[2,1]
chol(d)
helpp(chol)
help(chol)
diag(d)<-1
chol(d)
d
chol(d,pivot=T)
d = as.matrix(dist(coords))
length(d)
d = d + matrix(rnorm(length(d),sd = 0.01),nrow = nrow(d))
diag(d)<-1
chol(d,pivot=T)
c = chol(d,pivot=T)
c%*%t(c)
2000/60
8000*4
8000*4/2000/60
8000*4/2000
8000*4/2000
8000*4/2000*100/60
8000*4/2000*50/60
library(rgdal)
v1=c(1:10)
v2=as.character(c(1,1,1,3,4,10,1,1,4,5))
v=cbind(v2,v1)
v=as.data.frame(v)
colnames(v)=c("id_point","id_cluster")
table_tmp <- table(v$id_cluster)
table_tmp
v
table(v)
table(v$id_point)
v2=c(1,1,1,3,4,10,1,1,4,5)
v=cbind(v2,v1)
v
table(v$id_cluster)
v=as.data.frame(v)
colnames(v)=c("id_point","id_cluster")
table_tmp <- table(v$id_cluster)
table_tmp
is.numeric(v$id_point)
is.numeric(v$id_cluster)
table(sample.int(10,100,replace = T))
table(as.character(sample.int(10,100,replace = T)))
setwd(paste0(Sys.getenv('CS_HOME'),'/UrbanDynamics/Models/ABMCitiesFirms/Results/Exploration'))
library(dplyr)
library(ggplot2)
source(paste0(Sys.getenv('CS_HOME'),'/Organisation/Models/Utils/R/plots.R'))
#resPrefix = '20190924_162740_ONEFACTOR_REPLICATIONS_SYNTHETIC_GRID'
resPrefix = '20190925_134404_DIRECTSAMPLING_SYNTHETIC_GRID'
resdir = paste0(resPrefix,'/')
res <- as.tbl(read.csv(paste0(resdir,'data/',resPrefix,'.csv'),stringsAsFactors = F))
# parse double arrays / rename
corrindics=c("rhoDegreeSize","rhoFlowDistance","rhoFlowDistancePos")
for(corrindic in corrindics){
res[,corrindic]=res[,paste0(corrindic,'0')];res[,paste0(corrindic,'0')]=NULL
res[,paste0(corrindic,'Min')]=res[,paste0(corrindic,'1')];res[,paste0(corrindic,'1')]=NULL
res[,paste0(corrindic,'Max')]=res[,paste0(corrindic,'2')];res[,paste0(corrindic,'2')]=NULL
}
hierarchyindics = c("flowsHierarchy","networkDegreeHierarchy")
for(hierarchyindic in hierarchyindics){
res[,paste0(hierarchyindic,'Alpha')]=res[,paste0(hierarchyindic,'0')];res[,paste0(hierarchyindic,'0')]=NULL
res[,paste0(hierarchyindic,'RSquared')]=res[,paste0(hierarchyindic,'1')];res[,paste0(hierarchyindic,'1')]=NULL
}
####
parameters = c("gravityDecay","countryGravityDecay","gammaSectors","gammaLinks","gammaOrigin","gammaDestination")
indicators = c("internationalization","metropolization","networkAvgCommunitySize","networkDegreeEntropy",
"flowsHierarchyAlpha","rhoDegreeSize","rhoFlowDistance","networkDegreeHierarchyAlpha"
)
nominals = list("gravityDecay"=500,"countryGravityDecay"=500,"gammaSectors"=1,"gammaLinks"=1,"gammaOrigin"=1,"gammaDestination"=1)
sres <- res %>% group_by(gravityDecay,countryGravityDecay,gammaSectors,gammaLinks,gammaOrigin,gammaDestination) %>% summarize(
internationalizationSd = sd(internationalization),
internationalization = mean(internationalization),
metropolizationSd = sd(metropolization),
metropolization = mean(metropolization),
networkAvgCommunitySizeSd = sd(networkAvgCommunitySize),
networkAvgCommunitySize = mean(networkAvgCommunitySize),
networkDegreeEntropySd = sd(networkDegreeEntropy),
networkDegreeEntropy = mean(networkDegreeEntropy),
flowsHierarchyAlphaSd = sd(flowsHierarchyAlpha),
flowsHierarchyAlpha = mean(flowsHierarchyAlpha),
rhoDegreeSizeSd = sd(rhoDegreeSize),
rhoDegreeSize= mean(rhoDegreeSize),
rhoFlowDistanceSd=sd(rhoFlowDistance),
rhoFlowDistance = mean(rhoFlowDistance),
networkDegreeHierarchyAlphaSd = sd(networkDegreeHierarchyAlpha),
networkDegreeHierarchyAlpha = mean(networkDegreeHierarchyAlpha)
)
sapply(sres$gammaOrigin,function(s){expression(gamma[F]*"="*s)})
paste0("gamma_F = ",sres$gammaOrigin)
sres$gammaOriginString = paste0("gamma_F=",sres$gammaOrigin)
for(countryGravityDecay in unique(res$countryGravityDecay)){
for(gammaDestination in unique(res$gammaDestination)){
d = sres[sres$countryGravityDecay==countryGravityDecay&sres$gammaDestination==gammaDestination&sres$gammaLinks==0,]
for(indicator in indicators){
g=ggplot(d,aes_string(x='gravityDecay',y=indicator,group='gammaSectors',color='gammaSectors'))
g+geom_point()+geom_line()+geom_errorbar(aes_string(ymin=paste0(indicator,"-",indicator,"Sd"),ymax=paste0(indicator,"+",indicator,"Sd")))+
#facet_wrap(~gammaOrigin,scales='free')+
scale_color_continuous(name=expression(gamma[S]))+
facet_wrap(~gammaOriginString)+
xlab(expression(d[G]))+stdtheme
ggsave(file=paste0(resdir,indicator,'_countryGravityDecay',countryGravityDecay,'_gammaDestination',gammaDestination,'_facetwrapgammaOrigin_colorgammaSectors.png'),width=30,height=15,units='cm')
}
}
}
